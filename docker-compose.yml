---
version: '2'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:5.3.1
    container_name: ksqldb-client-zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:5.3.1
    container_name: ksqldb-client-kafka
    depends_on:
    - zookeeper
    ports:
    - 9092:9092
    - 19092:19092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: LOCALHOST://localhost:9092,DOCKER://kafka:19092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LOCALHOST:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: DOCKER
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  schema-registry:
    image: confluentinc/cp-schema-registry:5.3.1
    container_name: ksqldb-client-schema-registry
    restart: always
    depends_on:
    - kafka
    - zookeeper
    ports:
    - 8085:8085
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: kafka:19092
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: http://schema-registry:8085

  connect:
    image: confluentinc/cp-kafka-connect:5.3.1
    container_name: ksqldb-client-connect
    restart: always
    ports:
    - "8083:8083"
    depends_on:
    - zookeeper
    - kafka
    - schema-registry
    volumes:
    - ./connectors:/connect-plugins
    - ./connect-libs/mssql-jdbc-7.2.2.jre8.jar:/usr/share/java/kafka-connect-jdbc/mssql-jdbc-7.2.2.jre8.jar
    - ./connect-libs/mysql-connector-java-8.0.13.jar:/usr/share/java/kafka-connect-jdbc/mysql-connector-java-8.0.13.jar
    environment:
      CONNECT_BOOTSTRAP_SERVERS: "kafka:19092"
      CONNECT_REST_PORT: 8083
      CONNECT_LISTENERS: "http://0.0.0.0:8083"
      CONNECT_GROUP_ID: "connect"
      CONNECT_PRODUCER_CLIENT_ID: "connect-worker-producer"
      CONNECT_CONFIG_STORAGE_TOPIC: connect-configs
      CONNECT_OFFSET_STORAGE_TOPIC: connect-offsets
      CONNECT_STATUS_STORAGE_TOPIC: connect-statuses
      CONNECT_REPLICATION_FACTOR: 1
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      CONNECT_INTERNAL_KEY_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_INTERNAL_VALUE_CONVERTER: "org.apache.kafka.connect.json.JsonConverter"
      CONNECT_REST_ADVERTISED_HOST_NAME: "connect"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/connect-plugins"
      CONNECT_LOG4J_ROOT_LOGLEVEL: INFO
      CONNECT_LOG4J_LOGGERS: org.reflections=ERROR
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-5.3.1.jar

  control-center:
    image: confluentinc/cp-enterprise-control-center:5.3.1
    container_name: ksqldb-client-control-center
    restart: always
    depends_on:
    - zookeeper
    - kafka
    - connect
    ports:
    - "9021:9021"
    environment:
      CONTROL_CENTER_BOOTSTRAP_SERVERS: "kafka:19092"
      CONTROL_CENTER_ZOOKEEPER_CONNECT: "zookeeper:2181"
      CONTROL_CENTER_REPLICATION_FACTOR: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_REPLICATION: 1
      CONTROL_CENTER_INTERNAL_TOPICS_REPLICATION: 1
      CONTROL_CENTER_COMMAND_TOPIC_REPLICATION: 1
      CONTROL_CENTER_METRICS_TOPIC_REPLICATION: 1
      CONTROL_CENTER_MONITORING_INTERCEPTOR_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_INTERNAL_TOPICS_PARTITIONS: 1
      CONTROL_CENTER_METRICS_TOPIC_PARTITIONS: 1
      CONTROL_CENTER_STREAMS_NUM_STREAM_THREADS: 1
      # Amount of heap to use for internal caches. Increase for better thoughput
      CONTROL_CENTER_STREAMS_CACHE_MAX_BYTES_BUFFERING: 100000000
      CONTROL_CENTER_CONNECT_CLUSTER: "http://connect:8083"
      CONTROL_CENTER_KSQL_URL: "http://ksqldb:8088"
      CONTROL_CENTER_KSQL_ADVERTISED_URL: "http://ksqldb:8088"
      CONTROL_CENTER_SCHEMA_REGISTRY_URL: "http://schema-registry:8085"
      CONTROL_CENTER_DEPRECATED_VIEWS_ENABLE: "true"
      CONTROL_CENTER_STREAMS_CONSUMER_REQUEST_TIMEOUT_MS: "960032"
      # HTTP and HTTPS to Control Center UI 
      CONTROL_CENTER_REST_LISTENERS: "http://0.0.0.0:9021"

  ksqldb:
    image: confluentinc/ksqldb-server:0.6.0
    hostname: ksqldb
    container_name: ksqldb-client-server
    depends_on:
      - kafka
    ports:
      - "8088:8088"
    environment:
      KSQL_LISTENERS: http://0.0.0.0:8088
      KSQL_BOOTSTRAP_SERVERS: kafka:19092
      KSQL_KSQL_SCHEMA_REGISTRY_URL: "http://schema-registry:8085"
      KSQL_KSQL_LOGGING_PROCESSING_STREAM_AUTO_CREATE: "true"
      KSQL_KSQL_LOGGING_PROCESSING_TOPIC_AUTO_CREATE: "true"

  ksqldb-cli:
    image: confluentinc/ksqldb-cli:0.6.0
    container_name: ksqldb-client-cli
    depends_on:
      - kafka
      - ksqldb
    entrypoint: /bin/sh
    tty: true